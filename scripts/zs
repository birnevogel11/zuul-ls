#!/usr/bin/bash

set -Eeuo pipefail

readonly ZS_PROGRAM="${ZUUL_SEARCH_BIN_PATH:-"zuul-search"}"

_open_nvim() {
  local -r path="$1"
  local -r raw_line="$2"
  local -r raw_column="$3"
  local -r line="$(( raw_line + 1 ))"
  local -r column="$(( raw_column + 1 ))"

  nvim "+${line}" "${path/\~/${HOME}}" "+normal${column}|"
}

zs-job() {
  local -r result=$(${ZS_PROGRAM} jobs | \
    fzf \
      -d'\t' \
      --with-nth=1,2 \
      --preview "eval 'bat --color=always -n {2} -r {3}:'" \
      --preview-window 'down,50%')

  local -ra tokens=($result)
  if [[ "${#tokens[@]}" != "0" ]]; then
    _open_nvim "${tokens[1]}" "${tokens[2]}" "${tokens[3]}"
  fi
}

zs-project-templates() {
  local -r result=$(${ZS_PROGRAM} project-templates | \
    fzf \
      -d'\t' \
      --with-nth=1,2 \
      --preview "eval 'bat --color=always -n {2} -r {3}:'" \
      --preview-window 'down,50%')

  local -ra tokens=($result)
  if [[ "${#tokens[@]}" != "0" ]]; then
    _open_nvim "${tokens[1]}" "${tokens[2]}" "${tokens[3]}"
  fi
}

zs-job-name() {
  local -r result=$(${ZS_PROGRAM} jobs | \
    fzf \
      -d'\t' \
      --with-nth=1,2 \
      --preview "eval 'bat --color=always -n {2} -r {3}:'" \
      --preview-window 'down,50%')

  local -ra tokens=($result)
  local -r job_name="${tokens[0]}"

  echo "${job_name}"
}

zs-job-hierarchy() {
  local -r job_name="${1:-$(zs-job-name)}"
  echo "zs h ${job_name}"

  local -r result=$(${ZS_PROGRAM} job-hierarchy "${job_name}" | \
    fzf \
      -d'\t' \
      --with-nth=1,2 \
      --preview "eval 'bat --color=always -n {2} -r {3}:'" \
      --preview-window 'down,50%')

  local -ra tokens=($result)
  if [[ "${#tokens[@]}" != "0" ]]; then
    _open_nvim "${tokens[1]}" "${tokens[2]}" "${tokens[3]}"
  fi
}

zs-job-vars() {
  local -r job_name="${1:-$(zs-job-name)}"
  echo "zs v ${job_name}"

  local -r result=$(${ZS_PROGRAM} job-vars "${job_name}" | \
    fzf \
      -d'\t' \
      --with-nth=1,2,6 \
      --preview "eval 'bat --color=always -n {4} -r {5}:'" \
      --preview-window 'down,50%')

  local -ra tokens=($result)
  if [[ "${#tokens[@]}" != "0" ]]; then
    _open_nvim "${tokens[3]}" "${tokens[4]}" "${tokens[5]}"
  fi
}

zs-workdir-vars() {
  local -r result=$(${ZS_PROGRAM} workdir-vars | \
    fzf \
      -d'\t' \
      --with-nth=1,2,6 \
      --preview "eval 'bat --color=always -n {4} -r {5}:'" \
      --preview-window 'down,50%')

  local -ra tokens=($result)
  if [[ "${#tokens[@]}" != "0" ]]; then
    _open_nvim "${tokens[3]}" "${tokens[4]}" "${tokens[5]}"
  fi
}

zs-job-playbooks() {
  local -r job_name="${1:-$(zs-job-name)}"
  echo "zs p ${job_name}"

  local -r result=$(${ZS_PROGRAM} job-playbooks "${job_name}" | \
    fzf \
      -d'\t' \
      --with-nth=1,2,3 \
      --preview "eval 'bat --color=always -n {1}'" \
      --preview-window 'down,50%')

  local -ra tokens=($result)
  if [[ "${#tokens[@]}" != "0" ]]; then
    local -r path="${tokens[0]}"
    nvim "${path/\~/${HOME}}"
  fi
}

zs-roles() {
  local -r result=$(${ZS_PROGRAM} roles | \
    fzf \
      -d'\t' \
      --with-nth=1,2 \
      --preview "eval 'bat --color=always -n {2}'" \
      --preview-window 'right,40%')

  local -ra tokens=($result)
  if [[ "${#tokens[@]}" != "0" ]]; then
    local -r path="${tokens[1]}"
    nvim "${path/\~/${HOME}}"
  fi
}

show_help() {
  echo "zs - zuul search - Search zuul config with zuul-search, fzf and bat"
  echo ""
  echo "Command:"
  echo "  zs <search> [job_name]"
  echo "    j,jobs              - Search all jobs"
  echo "    h,hierarchy         - Search the job hierarchy of a job"
  echo "    v,vars              - Search job variables of a job"
  echo "    wv,workdir-vars     - Search variables in cwd"
  echo "    p,playbooks         - Search playbooks of a job"
  echo "    t,project-templates - Search all project-templates"
  echo "    help                - Show the help"
  echo ""
  echo "Example:"
  echo "    zs j          - Search all jobs"
  echo "    zs job        - Same as 'zs j'"
  echo ""
  echo "    zs h          - Search the job name first, search the job hierarchy of the job name"
  echo "    zs hierarchy  - Same as 'zs h'"
  echo ""
  echo "    zs h zuul-job - Search the job hierarhcy of 'zuul-job'"
}

main() {
  if [[ "$#" == "0" ]]; then
    show_help
    exit 0
  fi

  local -r action="$1"
  local -r job_name="${2:-}"

  case "${action}" in
    j)
      zs-job
      ;;
    jobs)
      zs-job
      ;;
    h)
      zs-job-hierarchy "${job_name}"
      ;;
    hierarchy)
      zs-job-hierarchy "${job_name}"
      ;;
    v)
      zs-job-vars "${job_name}"
      ;;
    vars)
      zs-job-vars "${job_name}"
      ;;
    wv)
      zs-workdir-vars
      ;;
    workdir-vars)
      zs-workdir-vars
      ;;
    p)
      zs-job-playbooks "${job_name}"
      ;;
    playbooks)
      zs-job-playbooks "${job_name}"
      ;;
    r)
      zs-roles
      ;;
    roles)
      zs-roles
      ;;
    t)
      zs-project-templates
      ;;
    project-templates)
      zs-project-templates
      ;;
    help)
      show_help
      ;;
    *)
      show_help
      ;;
  esac
}

main "${@}"
