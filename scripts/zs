#!/usr/bin/bash

set -Eeuo pipefail

readonly ZS_PROGRAM="${HOME}/Trek/zuul-ls/target/debug/zuul-search"

zs-job() {
  local -r result=$(${ZS_PROGRAM} jobs | \
    fzf \
      -d'\t' \
      --with-nth=1,2 \
      --preview "eval 'bat --color=always -n {2} -r {3}:'" \
      --preview-window 'down,50%')

  local -ra tokens=($result)
  if [[ "${#tokens[@]}" != "0" ]]; then
    local -r path="${tokens[1]}"
    local -r line="${tokens[2]}"
    local -r column="${tokens[3]}"

    nvim "+${line}" "${path/\~/${HOME}}" "+normal${column}|"
  fi
}

zs-project-templates() {
  local -r result=$(${ZS_PROGRAM} project-templates | \
    fzf \
      -d'\t' \
      --with-nth=1,2 \
      --preview "eval 'bat --color=always -n {2} -r {3}:'" \
      --preview-window 'down,50%')

  local -ra tokens=($result)
  if [[ "${#tokens[@]}" != "0" ]]; then
    local -r path="${tokens[1]}"
    local -r line="${tokens[2]}"
    local -r column="${tokens[3]}"

    nvim "+${line}" "${path/\~/${HOME}}" "+normal${column}|"
  fi
}

zs-job-name() {
  local -r result=$(${ZS_PROGRAM} jobs | \
    fzf \
      -d'\t' \
      --with-nth=1,2 \
      --preview "eval 'bat --color=always -n {2} -r {3}:'" \
      --preview-window 'down,50%')

  local -ra tokens=($result)
  local -r job_name="${tokens[0]}"

  echo "${job_name}"
}

zs-job-hierarchy() {
  local -r job_name="${1:-$(zs-job-name)}"
  echo "zs h ${job_name}"

  local -r result=$(${ZS_PROGRAM} job-hierarchy "${job_name}" | \
    fzf \
      -d'\t' \
      --with-nth=1,2 \
      --preview "eval 'bat --color=always -n {2} -r {3}:'" \
      --preview-window 'down,50%')

  local -ra tokens=($result)
  if [[ "${#tokens[@]}" != "0" ]]; then
    local -r path="${tokens[1]}"
    local -r line="${tokens[2]}"
    local -r column="${tokens[3]}"

    nvim "+${line}" "${path/\~/${HOME}}" "+normal${column}|"
  fi
}

zs-job-vars() {
  local -r job_name="${1:-$(zs-job-name)}"
  echo "zs v ${job_name}"

  local -r result=$(${ZS_PROGRAM} job-vars "${job_name}" | \
    fzf \
      -d'\t' \
      --with-nth=1,2,6 \
      --preview "eval 'bat --color=always -n {4} -r {5}:'" \
      --preview-window 'down,50%')

  local -ra tokens=($result)
  if [[ "${#tokens[@]}" != "0" ]]; then
    local -r path="${tokens[3]}"
    local -r line="${tokens[4]}"
    local -r column="${tokens[5]}"

    nvim "+${line}" "${path/\~/${HOME}}" "+normal${column}|"
  fi
}

zs-workdir-vars() {
  local -r result=$(${ZS_PROGRAM} workdir-vars | \
    fzf \
      -d'\t' \
      --with-nth=1,2,6 \
      --preview "eval 'bat --color=always -n {4} -r {5}:'" \
      --preview-window 'down,50%')

  local -ra tokens=($result)
  if [[ "${#tokens[@]}" != "0" ]]; then
    local -r path="${tokens[3]}"
    local -r line="${tokens[4]}"
    local -r column="${tokens[5]}"

    nvim "+${line}" "${path/\~/${HOME}}" "+normal${column}|"
  fi
}

zs-job-playbooks() {
  local -r job_name="${1:-$(zs-job-name)}"
  echo "zs p ${job_name}"

  local -r result=$(${ZS_PROGRAM} job-playbooks "${job_name}" | \
    fzf \
      -d'\t' \
      --with-nth=1,2,3 \
      --preview "eval 'bat --color=always -n {1}'" \
      --preview-window 'down,50%')

  local -ra tokens=($result)
  if [[ "${#tokens[@]}" != "0" ]]; then
    local -r path="${tokens[0]}"
    nvim "${path/\~/${HOME}}"
  fi
}

zs-roles() {
  local -r result=$(${ZS_PROGRAM} roles | \
    fzf \
      -d'\t' \
      --with-nth=1,2 \
      --preview "eval 'bat --color=always -n {2}'" \
      --preview-window 'right,40%')

  local -ra tokens=($result)
  if [[ "${#tokens[@]}" != "0" ]]; then
    local -r path="${tokens[1]}"
    nvim "${path/\~/${HOME}}"
  fi
}

main() {
  if [[ "$#" == "0" ]]; then
    echo "help"
    exit 0
  fi

  local -r action="$1"
  local -r job_name="${2:-}"

  case "${action}" in
    j)
      zs-job
      ;;
    jobs)
      zs-job
      ;;
    h)
      zs-job-hierarchy "${job_name}"
      ;;
    hierarchy)
      zs-job-hierarchy "${job_name}"
      ;;
    v)
      zs-job-vars "${job_name}"
      ;;
    vars)
      zs-job-vars "${job_name}"
      ;;
    wv)
      zs-workdir-vars
      ;;
    workdir-vars)
      zs-workdir-vars
      ;;
    p)
      zs-job-playbooks "${job_name}"
      ;;
    playbooks)
      zs-job-playbooks "${job_name}"
      ;;
    r)
      zs-roles
      ;;
    roles)
      zs-roles
      ;;
    t)
      zs-project-templates
      ;;
    project-templates)
      zs-project-templates
      ;;
    *)
      echo "help"
      ;;
  esac
}

main "${@}"
